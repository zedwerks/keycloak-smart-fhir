{
	"info": {
		"_postman_id": "a91e4519-36da-4b56-8b39-607fd19510d6",
		"name": "keycloak-smart-fhir-demo",
		"description": "Example SMART on FHIR Launch flow.  \n  \n1\\. Authenticate as an EMR user and \"Set Context\"\n\n2\\. Mimic Auth Challenge for SMART app, which now has context launch token to pass to Auth Server.  \n3\\. Examine the resulting json response, my viewing the Postman console, and then view the access token in jwt.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33726863"
	},
	"item": [
		{
			"name": "EMR Context Client",
			"item": [
				{
					"name": "Set Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Extract the userId",
									"var contextId = jsonData.context_id;",
									"",
									"// Set the userId as a collection variable",
									"pm.collectionVariables.set(\"context_id\", contextId);",
									"",
									"// Log the userId to the Postman console for verification",
									"console.log(\"contextId: \" + contextId);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resourceType\" : \"LaunchContext\",\n  \"patient\": \"12345\",\n  \"encounter\": \"229299395\",\n  \"additionalParameters\": {\n    \"fhirContext\": [\n      { \"reference\": \"DiagnosticReport/12345\" },\n      { \"reference\": \"Observation/123456\" },\n      { \"reference\": \"Encounter/234567\" },\n      { \"reference\": \"Appointment/345678\" },\n      {\n        \"reference\": \"List/1234\",\n        \"role\": \"https://example.org/med-list-at-home\"\n      },\n      {\n        \"role\": \"https://example.org/role/questionnaire-to-display\",\n        \"type\": \"Questionnaire\",\n        \"canonical\": \"https://example.org/Questionnaire/123/|v2023-05-03\"\n      }\n    ],\n    \"intent\": \"reconcile-medications\",\n    \"need_patient_banner\": \"false\",\n    \"smart_style_url\": \"https://ehr.com/styles/smart.json\",\n    \"tenant\": \"2ddd6c3a-8e9a-44c6-a305-52111ad302a2\",\n    \"custom_claim\": \"anthing goes here\",\n    \"ocean-api-key\": \"some-api-key-goes-here\"\n  }\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{keycloak_url_base}}/realms/smart/smart-on-fhir/context",
							"host": [
								"{{keycloak_url_base}}"
							],
							"path": [
								"realms",
								"smart",
								"smart-on-fhir",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "userinfo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/realms/smart/protocol/openid-connect/userinfo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"realms",
								"smart",
								"protocol",
								"openid-connect",
								"userinfo"
							]
						}
					},
					"response": []
				}
			],
			"description": "This is the authenticated EMR that then has the ability to POST a new context just before it wants to launch a smart app",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "clientSecret",
						"value": "{{postman_emr_secret}}",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "authorization_code_with_pkce",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "postman-emr",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "openid Context.write",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "{{keycloak_url_base}}/realms/smart/protocol/openid-connect/auth",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "{{keycloak_url_base}}/realms/smart/protocol/openid-connect/token",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "postman-emr",
						"type": "string"
					},
					{
						"key": "refreshRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "tokenRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "authRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "state",
						"value": "adsfdsfsdfsdfsdf",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Postman SMART App",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://111ce016-7858-49f2-bc89-2a9c35f322c1.mock.pstmn.io",
							"protocol": "https",
							"host": [
								"111ce016-7858-49f2-bc89-2a9c35f322c1",
								"mock",
								"pstmn",
								"io"
							]
						}
					},
					"response": []
				}
			],
			"description": "Represents a SMART app attempting to authenticate after having received the launch context during the request to launch. This launch parameter was set by the authenticated user directly from the EMR to its auth server (keycloak).",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "authRequestParams",
						"value": [
							{
								"key": "launch",
								"value": "{{context_id}}",
								"enabled": true,
								"send_as": "request_url"
							},
							{
								"key": "aud",
								"value": "https://localhost:9000/fhir",
								"enabled": true,
								"send_as": "request_url"
							}
						],
						"type": "any"
					},
					{
						"key": "grant_type",
						"value": "authorization_code_with_pkce",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "postman-smart-app",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "openid launch patient/Patient.read",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "http://localhost:8080/realms/smart/protocol/openid-connect/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "http://localhost:8080/realms/smart/protocol/openid-connect/auth",
						"type": "string"
					},
					{
						"key": "tokenRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "state",
						"value": "rqwr90uqwaeriogfjrgfgijee888",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "tokenName",
						"value": "postman",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "",
						"type": "string"
					},
					{
						"key": "refreshRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "username",
						"value": "admin",
						"type": "string"
					},
					{
						"key": "password",
						"value": "admin",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "context_id",
			"value": ""
		}
	]
}